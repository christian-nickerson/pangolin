# install python dependencies
FROM python:3.12-slim AS python

RUN apt update && \
    apt -y upgrade && \
    pip install --upgrade pip && \
    pip install poetry==2.0.1

COPY pyproject.toml poetry.lock ./

RUN poetry config virtualenvs.create false && \
    poetry install --without dev

# create cuda stage to pull cuda libraries
FROM nvidia/cuda:12.8.0-base-ubuntu24.04 AS cuda

RUN apt update && apt -y upgrade

# build from C to include C modules required by python packages
FROM gcr.io/distroless/cc-debian12:nonroot

# copy python & python dependencies
COPY --from=python /usr/local/lib/ /usr/local/lib/
COPY --from=python /usr/local/bin/python /usr/local/bin/python
COPY --from=python /etc/ld.so.cache /etc/ld.so.cache

# copy cuda libraries
COPY --from=cuda /usr/local/cuda/lib64/libcudart.so* /usr/local/cuda/lib64/

# copy common compiled libraries
ARG CHIPSET_ARCH=x86_64-linux-gnu
COPY --from=python /usr/lib/${CHIPSET_ARCH}/libffi* /usr/lib/${CHIPSET_ARCH}/
COPY --from=python /lib/${CHIPSET_ARCH}/libz.so.1 /lib/${CHIPSET_ARCH}/
COPY --from=python /lib/${CHIPSET_ARCH}/libexpat* /lib/${CHIPSET_ARCH}/

ENV LANG=C.UTF-8 \
    LC_ALL=C.UTF-8 \
    PYTHONDONTWRITEBYTECODE=1 \
    PYTHONFAULTHANDLER=1 \
    PORT=55001

COPY embedding/src/ ./
COPY settings.toml .

EXPOSE $PORT

ENTRYPOINT [ "python", "main.py" ]
